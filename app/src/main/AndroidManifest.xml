<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.webabcd.androiddemoipc">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <!--
            用于演示“分享目标”的 activity
        -->
        <activity android:name=".ShareTargetDemo1">
            <intent-filter>
                <!--要成为分享目标，需要加上如下的 activity 和 category-->
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <!--设置可接收数据的数据类型，本例以接收纯文本为例-->
                <data android:mimeType="text/plain" />
            </intent-filter>
        </activity>
        <!--
            receiver - 注册一个 BroadcastReceiver
            enabled - 是否启用这个广播接收器
            exported - 是否允许这个广播接收器接收本程序以外的广播
        -->
        <receiver
            android:name=".BroadcastDemo1"
            android:enabled="true"
            android:exported="true">
            <intent-filter>

                <!-- 监听系统广播只需要在这里配置广播的 action 的 name 即可 -->
                <!-- 监听开机广播（另外要添加 <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /> 权限，以及解决程序安装在 sd 卡时的问题，本例都不说明了，网上搜吧） -->
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
            <intent-filter>

                <!-- 监听名为 cn.webabcd.broadcast.BroadcastDemo1 的广播 -->
                <action android:name="cn.webabcd.broadcast.BroadcastDemo1" />
            </intent-filter>
        </receiver>
        <!--
            exported - 是否允许此 activity 被其他应用打开
        -->
        <activity
            android:name=".PackageDemo1"
            android:exported="true" />
        <activity android:name=".URLScheme1">

            <!-- 定义一个通过 URLScheme(deep link) 启动的 intent-filter -->
            <intent-filter>

                <!-- 下面这 3 句必须要加 -->
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <!--
                    scheme - 协议名
                    host, path, port - 顾名思义

                    按如下配置，则 deep link 为 webabcd://a.b.c/api
                -->
                <data
                    android:host="a.b.c"
                    android:path="/api"
                    android:scheme="webabcd" />
            </intent-filter>
        </activity>
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--
            注册一个 ContentProvider
            name - 实现此 ContentProvider 的类
            authorities - 此 ContentProvider 的地址（相当于 url 中的 host）
            exported - 此 ContentProvider 是否可被其他应用调用
        -->
        <provider
            android:name=".ContentProviderDemo1"
            android:authorities="cn.webabcd.contentProviderDemo1"
            android:exported="true" />
    </application>

</manifest>